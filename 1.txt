Записки
поиск знаки вопроса - надо спросить.
--------------Командная строка-------------------
Чтобы создать ссылку на файл, используйте команду ln -s: первым параметром укажите исходный файл, а вторым — имя ссылки. 
touch — создаёт файл с указанным расширением после имени файла.
cp — копирует файл
mv — перемещает файл
rm — удаляет файл
tail -n КОЛИЧЕСТВО СТРОК — команда выводящая последние строки файла.
head -n КОЛИЧЕСТВО СТРОК —  команда выводящая первые строки файла
Требуется неявный цикл, который примет на себя поток из файла-списка и поочереди будет вызывать команду wget. Для этого нужна команда xargs. В качестве параметра xargs передают имя команды, которую нужно вызвать.
 > и >> в конвейере. Первая перезаписывает файл, вторая дополняет его.

uniq — команда поиска уникальных строк. Она избавляет от дубликатов в датасетах. При этом в зависимости от опции поведение функции будет меняться:
с опцией -u команда выводит исключительно те строки, у которых нет повторов,
-d — выводит повторяющуюся строку единожды,
-D — выводит только повторяющиеся строки.

50 команд - https://www.thegeekstuff.com/2010/11/50-linux-commands/
еще про команды - https://github.com/jlevy/the-art-of-command-line/blob/master/README-ru.md
__________________
---------------------GIT-----------------
git config --global user.name "Vladimir Tretyakov"
git config --global user.email wowan445@yandex.ru
git config --list
git config--global
________________________________________________________
from sklearn.model_selection import cross_val_score

scores = cross_val_score(model, features, target, cv=5)
model - модель (пример: model = DecisionTreeClassifier(random_state=0))
features - параметры для обучения
target - таргет 
cv - кол-во делений 
На выходе список метрика качества моделей по каждой выборке. метрика выбирается автоматом, не понятно как происходит выбор? 
Для подсчета среднего использовать: final_score = sum(scores) / len(scores)
__________________________________________________________________________
Работа с дата фреймом
df.describe() - показывает распредление данных


extract(month from cast(invoice_date as date))
__________________________________________________________________________
Сравнение с другими функциями
В отличие от EXTRACT, которая извлекает отдельные компоненты даты, DATE_TRUNC возвращает полную дату, округленную до указанного уровня. В отличие от TO_CHAR, которая форматирует дату в строку, DATE_TRUNC возвращает значение типа timestamp.

SELECT
    DATE_TRUNC('month', order_date) AS month_start,
    EXTRACT(YEAR FROM order_date) AS order_year,
    TO_CHAR(order_date, 'YYYY-MM') AS formatted_date
FROM orders
GROUP BY month_start, order_year, formatted_date
ORDER BY month_start;

CAST — это оператор явного приведения типов данных в PostgreSQL. Он позволяет преобразовывать значения из одного типа данных в другой.
Преобразование timestamp в date:
SELECT CAST(order_timestamp AS DATE) FROM orders;
Преобразование числа в строку:
SELECT CAST(123 AS VARCHAR);
______________________________


____________________________________________

__________________________________________________________________________

__________________________________________________________________________

__________________________________________________________________________

__________________________________________________________________________

__________________________________________________________________________

__________________________________________________________________________

__________________________________________________________________________

__________________________________________________________________________

__________________________________________________________________________

__________________________________________________________________________

__________________________________________________________________________